{"ast":null,"code":"var _jsxFileName = \"/Users/672682/personal projects/chat-app/client/src/Components/Chat/Chat.js\";\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport queryString from 'query-string';\nimport './Chat.css';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const END_POINT = 'localhost:4000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    setName(name);\n    setRoom(room);\n    socket = io(END_POINT);\n    socket.emit('join', {\n      name: name,\n      room: room\n    });\n    console.log(socket);\n  }, [END_POINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  sendMessage = () => {};\n\n  return React.createElement(\"div\", {\n    className: \"chat-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: message,\n    onChange: event => setMessage(event.target.value),\n    onKeyPress: event => event.key === 'enter' ? sendMessage(event) : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/672682/personal projects/chat-app/client/src/Components/Chat/Chat.js"],"names":["React","useEffect","useState","io","queryString","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","END_POINT","parse","search","emit","console","log","on","sendMessage","event","target","value","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAO,YAAP;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAEzB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBP,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACQ,IAAD,EAAMC,OAAN,IAAiBT,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMc,SAAS,GAAG,gBAAlB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAACO,MAAAA,IAAD;AAAME,MAAAA;AAAN,QAAcN,WAAW,CAACa,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAApB;AACAT,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,GAAGF,EAAE,CAACa,SAAD,CAAX;AAEAX,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAmB;AAACX,MAAAA,IAAI,EAAEA,IAAP;AAAaE,MAAAA,IAAI,EAAEA;AAAnB,KAAnB;AAEAU,IAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AACH,GAVQ,EAUP,CAACW,SAAD,EAAWT,QAAQ,CAACW,MAApB,CAVO,CAAT;AAYAjB,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,MAAM,CAACiB,EAAP,CAAU,SAAV,EAAsBV,OAAD,IAAa;AAC9BG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACH,KAFD;AAGH,GAJQ,EAIP,CAACE,QAAD,CAJO,CAAT;;AAMAS,EAAAA,WAAW,GAAG,MAAM,CAEnB,CAFD;;AAIA,SAEI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACA,IAAA,KAAK,EAAEX,OADP;AAEA,IAAA,QAAQ,EAAGY,KAAD,IAAWX,UAAU,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAF/B;AAGA,IAAA,UAAU,EAAIF,KAAK,IAAIA,KAAK,CAACG,GAAN,KAAc,OAAd,GAAwBJ,WAAW,CAACC,KAAD,CAAnC,GAA6C,IAHpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ;AAWH,CAzCD;;AA2CA,eAAelB,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport io from 'socket.io-client'\nimport queryString from 'query-string'\nimport './Chat.css'\n\nlet socket;\n\nconst Chat = ({location}) => {\n\n    const [name,setName] = useState('')\n    const [room,setRoom] = useState('')\n    const [message, setMessage] = useState('')\n    const [messages, setMessages] = useState([])\n    const END_POINT = 'localhost:4000'\n\n    useEffect(() => {\n        const {name,room} = queryString.parse(location.search)\n        setName(name)\n        setRoom(room)\n\n        socket = io(END_POINT)\n\n        socket.emit('join',{name: name, room: room})\n\n        console.log(socket)\n    },[END_POINT,location.search])\n\n    useEffect(() => {\n        socket.on('message', (message) => {\n            setMessages([...messages, message])\n        })\n    },[messages])\n\n    sendMessage = () => {\n        \n    }\n    \n    return (\n        \n        <div className='chat-container'>\n            <input\n            value={message}\n            onChange={(event) => setMessage(event.target.value)}\n            onKeyPress = {event => event.key === 'enter' ? sendMessage(event) : null }\n            >\n            </input>\n        </div>\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}