{"ast":null,"code":"var _jsxFileName = \"/Users/672682/personal projects/chat-app/client/src/Components/Chat/Chat.js\";\nimport React, { useEffect, useState } from 'react';\nimport Infobar from '../infoBar/infoBar';\nimport Input from '../Input/Input';\nimport io from 'socket.io-client';\nimport queryString from 'query-string';\nimport './Chat.css';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const END_POINT = 'localhost:4002';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    setName(name);\n    setRoom(room);\n    socket = io(END_POINT);\n    socket.emit('join', {\n      name: name,\n      room: room\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    }; // console.log(socket)\n  }, [END_POINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    }); // console.log('from 2nd use effect',messages)\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n    console.log('message sent');\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return React.createElement(\"div\", {\n    className: \"outer-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"inner-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Infobar, {\n    room: room,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/672682/personal projects/chat-app/client/src/Components/Chat/Chat.js"],"names":["React","useEffect","useState","Infobar","Input","io","queryString","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","END_POINT","parse","search","emit","off","on","sendMessage","event","preventDefault","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAO,YAAP;AAGA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAEzB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBT,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACU,IAAD,EAAMC,OAAN,IAAiBX,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMgB,SAAS,GAAG,gBAAlB;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAACS,MAAAA,IAAD;AAAME,MAAAA;AAAN,QAAcN,WAAW,CAACa,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAApB;AACAT,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,GAAGF,EAAE,CAACa,SAAD,CAAX;AAEAX,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAmB;AAACX,MAAAA,IAAI,EAAEA,IAAP;AAAaE,MAAAA,IAAI,EAAEA;AAAnB,KAAnB;AAEA,WAAO,MAAM;AACTL,MAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ;AAEAd,MAAAA,MAAM,CAACe,GAAP;AACH,KAJD,CATY,CAeZ;AACH,GAhBQ,EAgBP,CAACJ,SAAD,EAAWT,QAAQ,CAACW,MAApB,CAhBO,CAAT;AAkBAnB,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAsBT,OAAD,IAAa;AAC9BG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACH,KAFD,EADY,CAIZ;AACH,GALQ,EAKP,CAACE,QAAD,CALO,CAAT;;AAOA,QAAMQ,WAAW,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AAEA,QAAGd,OAAH,EAAW;AACPP,MAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA2BP,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACH;AACH,GARD;;AAUAY,EAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ,EAAqBE,QAArB;AAEA,SAEI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEJ,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CADJ,CAFJ;AAWH,CAxDD;;AA0DA,eAAeJ,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Infobar from '../infoBar/infoBar'\nimport Input from '../Input/Input'\nimport io from 'socket.io-client'\nimport queryString from 'query-string'\nimport './Chat.css'\n\n\nlet socket;\n\nconst Chat = ({location}) => {\n\n    const [name,setName] = useState('')\n    const [room,setRoom] = useState('')\n    const [message, setMessage] = useState('')\n    const [messages, setMessages] = useState([])\n    const END_POINT = 'localhost:4002'\n\n    useEffect(() => {\n        const {name,room} = queryString.parse(location.search)\n        setName(name)\n        setRoom(room)\n\n        socket = io(END_POINT)\n\n        socket.emit('join',{name: name, room: room})\n\n        return () => {\n            socket.emit('disconnect')\n\n            socket.off()\n        }\n\n        // console.log(socket)\n    },[END_POINT,location.search])\n\n    useEffect(() => {\n        socket.on('message', (message) => {\n            setMessages([...messages, message])\n        })\n        // console.log('from 2nd use effect',messages)\n    },[messages])\n\n    const sendMessage = (event) => {\n       event.preventDefault()\n\n       console.log('message sent')\n\n       if(message){\n           socket.emit('sendMessage', message, () => setMessage(''))\n       }\n    }\n    \n    console.log(message, messages);\n    \n    return (\n        \n        <div className='outer-container'>\n            <div className='inner-container'>\n            <Infobar room={room}/>\n            \n            <Input/>\n            \n            </div>\n        </div>\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}