{"ast":null,"code":"var _jsxFileName = \"/Users/672682/personal projects/chat-app/client/src/Components/Chat/Chat.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Infobar from \"../infoBar/infoBar\";\nimport Input from \"../Input/Input\";\nimport Messages from \"../Messages/Messages\";\nimport TextContainer from \"../TextContainer/TextContainer\";\nimport io from \"socket.io-client\";\nimport queryString from \"query-string\";\nimport \"./Chat.css\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [users, setUsers] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const END_POINT = \"localhost:4002\";\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    setName(name);\n    setRoom(room);\n    socket = io(END_POINT);\n    socket.emit(\"join\", {\n      name: name,\n      room: room\n    });\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    }; // console.log(socket)\n  }, [END_POINT, location.search]);\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setMessages([...messages, message]);\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      setUsers(users);\n    }); // console.log('from 2nd use effect',messages)\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n    console.log(\"message sent\");\n\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n    }\n  };\n\n  console.log(message, messages);\n  return React.createElement(\"div\", {\n    className: \"outer-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"inner-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Infobar, {\n    room: room,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(TextContainer, {\n    users: users,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/672682/personal projects/chat-app/client/src/Components/Chat/Chat.js"],"names":["React","useEffect","useState","Infobar","Input","Messages","TextContainer","io","queryString","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","END_POINT","parse","search","emit","off","on","sendMessage","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Infobar from \"../infoBar/infoBar\";\nimport Input from \"../Input/Input\";\nimport Messages from \"../Messages/Messages\";\nimport TextContainer from \"../TextContainer/TextContainer\";\nimport io from \"socket.io-client\";\nimport queryString from \"query-string\";\nimport \"./Chat.css\";\n\nlet socket;\n\nconst Chat = ({ location }) => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [users, setUsers] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const END_POINT = \"localhost:4002\";\n\n  useEffect(() => {\n    const { name, room } = queryString.parse(location.search);\n    setName(name);\n    setRoom(room);\n\n    socket = io(END_POINT);\n\n    socket.emit(\"join\", { name: name, room: room });\n\n    return () => {\n      socket.emit(\"disconnect\");\n\n      socket.off();\n    };\n\n    // console.log(socket)\n  }, [END_POINT, location.search]);\n\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setMessages([...messages, message]);\n    });\n    socket.on(\"roomData\", ({ users }) => {\n      setUsers(users);\n    });\n    // console.log('from 2nd use effect',messages)\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    console.log(\"message sent\");\n\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n    }\n  };\n\n  console.log(message, messages);\n\n  return (\n    <div className=\"outer-container\">\n      <div className=\"inner-container\">\n        <Infobar room={room} />\n\n        <Messages messages={messages} name={name} />\n\n        <Input\n          message={message}\n          setMessage={setMessage}\n          sendMessage={sendMessage}\n        />\n\n        <TextContainer users={users} />\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}