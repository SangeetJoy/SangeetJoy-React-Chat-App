{"ast":null,"code":"var _jsxFileName = \"/Users/672682/personal projects/chat-app/client/src/Components/Chat/Chat.js\";\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport queryString from 'query-string';\nimport './Chat.css';\nimport infoBar from '../infoBar/infoBar';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const END_POINT = 'localhost:4002';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    setName(name);\n    setRoom(room);\n    socket = io(END_POINT);\n    socket.emit('join', {\n      name: name,\n      room: room\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    }; // console.log(socket)\n  }, [END_POINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    }); // console.log('from 2nd use effect',messages)\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n    console.log('message sent');\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, messages && messages.length ? messages.map(m => React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, m.text)) : null, React.createElement(\"input\", {\n    placeholder: \"type a message\",\n    value: message,\n    onChange: event => setMessage(event.target.value),\n    onKeyPress: event => event.key === 'Enter' ? sendMessage(event) : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/672682/personal projects/chat-app/client/src/Components/Chat/Chat.js"],"names":["React","useEffect","useState","io","queryString","infoBar","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","END_POINT","parse","search","emit","off","on","sendMessage","event","preventDefault","console","log","length","map","m","text","target","value","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAEzB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBR,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACS,IAAD,EAAMC,OAAN,IAAiBV,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMe,SAAS,GAAG,gBAAlB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAACQ,MAAAA,IAAD;AAAME,MAAAA;AAAN,QAAcP,WAAW,CAACc,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAApB;AACAT,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,GAAGH,EAAE,CAACc,SAAD,CAAX;AAEAX,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAmB;AAACX,MAAAA,IAAI,EAAEA,IAAP;AAAaE,MAAAA,IAAI,EAAEA;AAAnB,KAAnB;AAEA,WAAO,MAAM;AACTL,MAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ;AAEAd,MAAAA,MAAM,CAACe,GAAP;AACH,KAJD,CATY,CAeZ;AACH,GAhBQ,EAgBP,CAACJ,SAAD,EAAWT,QAAQ,CAACW,MAApB,CAhBO,CAAT;AAkBAlB,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAsBT,OAAD,IAAa;AAC9BG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACH,KAFD,EADY,CAIZ;AACH,GALQ,EAKP,CAACE,QAAD,CALO,CAAT;;AAOA,QAAMQ,WAAW,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AAEA,QAAGd,OAAH,EAAW;AACPP,MAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA2BP,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACH;AACH,GARD;;AAUAY,EAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ,EAAqBE,QAArB;AAEA,SAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKA,QAAQ,IAAIA,QAAQ,CAACa,MAArB,GAA+Bb,QAAQ,CAACc,GAAT,CAAcC,CAAD,IAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,CAAC,CAACC,IAAP,CAApB,CAA/B,GAAyE,IAF9E,EAGI;AACA,IAAA,WAAW,EAAC,gBADZ;AAEA,IAAA,KAAK,EAAElB,OAFP;AAGA,IAAA,QAAQ,EAAGW,KAAD,IAAWV,UAAU,CAACU,KAAK,CAACQ,MAAN,CAAaC,KAAd,CAH/B;AAIA,IAAA,UAAU,EAAIT,KAAK,IAAIA,KAAK,CAACU,GAAN,KAAc,OAAd,GAAwBX,WAAW,CAACC,KAAD,CAAnC,GAA6C,IAJpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAFJ;AAcH,CA3DD;;AA6DA,eAAejB,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport io from 'socket.io-client'\nimport queryString from 'query-string'\nimport './Chat.css'\nimport infoBar from '../infoBar/infoBar'\n\nlet socket;\n\nconst Chat = ({location}) => {\n\n    const [name,setName] = useState('')\n    const [room,setRoom] = useState('')\n    const [message, setMessage] = useState('')\n    const [messages, setMessages] = useState([])\n    const END_POINT = 'localhost:4002'\n\n    useEffect(() => {\n        const {name,room} = queryString.parse(location.search)\n        setName(name)\n        setRoom(room)\n\n        socket = io(END_POINT)\n\n        socket.emit('join',{name: name, room: room})\n\n        return () => {\n            socket.emit('disconnect')\n\n            socket.off()\n        }\n\n        // console.log(socket)\n    },[END_POINT,location.search])\n\n    useEffect(() => {\n        socket.on('message', (message) => {\n            setMessages([...messages, message])\n        })\n        // console.log('from 2nd use effect',messages)\n    },[messages])\n\n    const sendMessage = (event) => {\n       event.preventDefault()\n\n       console.log('message sent')\n\n       if(message){\n           socket.emit('sendMessage', message, () => setMessage(''))\n       }\n    }\n    \n    console.log(message, messages);\n    \n    return (\n        \n        <div className='container'>\n            {/* <h1>{`welcome ${name}`}</h1> */}\n            {messages && messages.length ?  messages.map((m) => <h1>{m.text}</h1> ) : null }\n            <input\n            placeholder='type a message'\n            value={message}\n            onChange={(event) => setMessage(event.target.value)}\n            onKeyPress = {event => event.key === 'Enter' ? sendMessage(event) : null }\n            >\n            </input>\n        </div>\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}